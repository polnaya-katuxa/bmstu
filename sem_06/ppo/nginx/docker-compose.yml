version: "3.9"
services:
  postby-1:
    build:
      context: ..
      dockerfile: ./nginx/Dockerfile
    stdin_open: true
    tty: true
    volumes:
      - ../backend/configs/http_example.yml:/backend/configs/http_config.yml:ro
    ports:
      - "8081:8089"
    networks:
      - postby-network
    depends_on:
      postgres-postby-master:
        condition: service_healthy

  postby-2:
    build:
      context: ..
      dockerfile: ./nginx/Dockerfile
    stdin_open: true
    tty: true
    volumes:
      - ../backend/configs/http_example.yml:/backend/configs/http_config.yml:ro
    ports:
      - "8082:8089"
    networks:
      - postby-network
    depends_on:
      postgres-postby-slave:
        condition: service_healthy

  postby-3:
    build:
      context: ..
      dockerfile: ./nginx/Dockerfile
    stdin_open: true
    tty: true
    volumes:
      - ../backend/configs/http_example.yml:/backend/configs/http_config.yml:ro
    ports:
      - "8083:8089"
    networks:
      - postby-network
    depends_on:
      postgres-postby-slave:
        condition: service_healthy

  postby-mirror:
    build:
      context: ..
      dockerfile: ./nginx/Dockerfile
    stdin_open: true
    tty: true
    volumes:
      - ../backend/configs/http_example.yml:/backend/configs/http_config.yml:ro
    ports:
      - "8084:8089"
    networks:
      - postby-network
    depends_on:
      postgres-postby-slave:
        condition: service_healthy

  postgres-postby-master:
    image: bitnami/postgresql:14.9.0
    environment:
      POSTGRESQL_REPLICATION_MODE: master
      POSTGRESQL_REPLICATION_USER: master_user
      POSTGRESQL_REPLICATION_PASSWORD: master_password
      POSTGRES_DB: postby
      POSTGRES_USER: postby
      POSTGRES_PASSWORD: password
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ../backend/deployments/master:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postby -d postby" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - postby-network

  postgres-postby-slave:
    image: bitnami/postgresql:14.9.0
    volumes:
      - ../backend/deployments/slave:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postby -d postby" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    environment:
      POSTGRESQL_REPLICATION_MODE: slave
      POSTGRESQL_REPLICATION_USER: master_user
      POSTGRESQL_REPLICATION_PASSWORD: master_password
      POSTGRESQL_MASTER_HOST: postgres-postby-master
      POSTGRES_DB: postby
      POSTGRES_USER: postby
      POSTGRES_PASSWORD: password
      PGDATA: "/var/lib/postgresql/data/pgdata"
    depends_on:
      postgres-postby-master:
        condition: service_healthy
    ports:
      - "5434:5432"
    networks:
      - postby-network

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.ru
      PGADMIN_DEFAULT_PASSWORD: password
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - ../backend/deployments/pgadmin:/var/lib/pgadmin
    ports:
      - "3333:80"
    networks:
      - postby-network
    restart: unless-stopped
    depends_on:
      postgres-postby-slave:
        condition: service_healthy
      postgres-postby-master:
        condition: service_healthy

#  mongo:
#    image: mongo
#    restart: always
#    environment:
#      MONGO_INITDB_DATABASE: "postby"
#      MONGO_INITDB_ROOT_USERNAME: "root"
#      MONGO_INITDB_ROOT_PASSWORD: "password"
#    volumes:
#      - ../backend/deployments/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
#      - ../backend/deployments/mongodata:/data/db
#    ports:
#      - "27017:27017"

  nginx:
    image: anroe/nginx-headers-more:latest
    container_name: nginx
    volumes:
      - ../frontend/dist:/etc/nginx/html/static
      - ./static/documentation:/etc/nginx/html/static/documentation
      - ../resources:/etc/nginx/html/resources
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "3000:80"
      - "443:443"
    restart: always
    networks:
      - postby-network
    depends_on:
      - postby-1
      - postby-2
      - postby-3
      - postby-mirror
      - pgadmin

networks:
  postby-network:
    driver: bridge