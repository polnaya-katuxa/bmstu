/*
 * API for ppo project
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type ViewFeedResponse struct {
	SubPosts []Post `json:"subPosts"`

	NoSubPosts []Post `json:"noSubPosts"`
}

// AssertViewFeedResponseRequired checks if the required fields are not zero-ed
func AssertViewFeedResponseRequired(obj ViewFeedResponse) error {
	elements := map[string]interface{}{
		"subPosts":   obj.SubPosts,
		"noSubPosts": obj.NoSubPosts,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	for _, el := range obj.SubPosts {
		if err := AssertPostRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.NoSubPosts {
		if err := AssertPostRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecurseViewFeedResponseRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of ViewFeedResponse (e.g. [][]ViewFeedResponse), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseViewFeedResponseRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aViewFeedResponse, ok := obj.(ViewFeedResponse)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertViewFeedResponseRequired(aViewFeedResponse)
	})
}
