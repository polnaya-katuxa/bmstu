/*
 * API for ppo project
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type Reaction struct {
	Icon string `json:"icon"`

	Num int32 `json:"num"`

	TypeID string `json:"typeID"`

	Yours bool `json:"yours"`
}

// AssertReactionRequired checks if the required fields are not zero-ed
func AssertReactionRequired(obj Reaction) error {
	elements := map[string]interface{}{
		"icon":   obj.Icon,
		"num":    obj.Num,
		"typeID": obj.TypeID,
		"yours":  obj.Yours,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseReactionRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of Reaction (e.g. [][]Reaction), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseReactionRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aReaction, ok := obj.(Reaction)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertReactionRequired(aReaction)
	})
}
