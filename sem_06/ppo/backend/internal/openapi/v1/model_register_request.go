/*
 * API for ppo project
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type RegisterRequest struct {
	Login string `json:"login"`

	Password string `json:"password"`

	Picture string `json:"picture"`

	Description string `json:"description"`

	Mail string `json:"mail"`
}

// AssertRegisterRequestRequired checks if the required fields are not zero-ed
func AssertRegisterRequestRequired(obj RegisterRequest) error {
	elements := map[string]interface{}{
		"login":       obj.Login,
		"password":    obj.Password,
		"picture":     obj.Picture,
		"description": obj.Description,
		"mail":        obj.Mail,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseRegisterRequestRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of RegisterRequest (e.g. [][]RegisterRequest), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseRegisterRequestRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aRegisterRequest, ok := obj.(RegisterRequest)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertRegisterRequestRequired(aRegisterRequest)
	})
}
