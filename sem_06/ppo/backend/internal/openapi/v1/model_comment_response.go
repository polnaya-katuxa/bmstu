/*
 * API for ppo project
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type CommentResponse struct {
	Comment Comment `json:"comment"`
}

// AssertCommentResponseRequired checks if the required fields are not zero-ed
func AssertCommentResponseRequired(obj CommentResponse) error {
	elements := map[string]interface{}{
		"comment": obj.Comment,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertCommentRequired(obj.Comment); err != nil {
		return err
	}
	return nil
}

// AssertRecurseCommentResponseRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of CommentResponse (e.g. [][]CommentResponse), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseCommentResponseRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aCommentResponse, ok := obj.(CommentResponse)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertCommentResponseRequired(aCommentResponse)
	})
}
